import logging
import tty
import termios
import sys

def __termios_func__(file=None):
    __file = file
    if sys.platform == 'Unix':
        if __file == None:
            fd = sys.stdin.fileno()
        else:
            try:
                __open = open(file,mode='+r',
                              encoding='utf-8',errors='ERROR')
                fd = __open.fileno()
            except FileExistsError and FileNotFoundError as err:
                print('Documnetry not exists or not found')
                fd = sys.stdin.fileno()
        try:
	    termios.tcdrain(fd)
            __old_attr__= termios.tcgetattr(fd)
            __new_attr__ = termios.tcgetattr(fd)
            __new_attr__['CFLAG'] = __new_attr__[3] & ~termios.ICANON & ~termios.ECHO & ~termios.ISIG
            __VMIN = 0
            __VTIME = 1
            __new_attr__[6]= __VTIME & __VMIN
            tty.setraw(sys.stdin.fileno()) 
        except termios.error as err:
            print(err.args[1] + 'CAUSE --->'+ err.args[3])
        read = sys.stdin.readlines(32)
        if read == None:
            termios.tcflow(__fd=fd,__action=termios.TCIOFF)
            tty.setcbreak(fd)
            if __file != None:
                __open.close()
        else:
            sys.stdout.write(read)
	termios.tcsetattr(fd,when=termious.TCSADRAW,attributes=__old_attr__)
    else:
        logging.basicConfig(level=logging.INFO)
        logging.info('System is not Unix ---> Function only working Unix system')
    